 cmake_minimum_required(VERSION 3.10)

 # Set the project name
 project(ContactManager)   #change project name

 # C++ standard
 set(CMAKE_CXX_STANDARD 20)
 set(CMAKE_CXX_STANDARD_REQUIRED ON)

 find_package(Drogon REQUIRED)

 # Source files
 file(GLOB_RECURSE SOURCES
     src/*.cpp
     controller/*.cpp
 )

 # Executable
 add_executable(${PROJECT_NAME} ${SOURCES})

 # Link libraries
 target_link_libraries(${PROJECT_NAME}
    PRIVATE
     Drogon::Drogon
 )

 # Use C++20 features
 target_compile_features(${PROJECT_NAME} PRIVATE cxx_std_20)




#==============================================================================================#


#
#
## For CXX_TESTING Uncomment below:
#cmake_minimum_required(VERSION 3.10)
#
## Set the project name
#project(ContactManager)   #change project name
#
## C++ standard
#set(CMAKE_CXX_STANDARD 20)
#set(CMAKE_CXX_STANDARD_REQUIRED ON)
#
#
## Include directories (add the path to your CxxTest installation)
#include_directories(/opt/homebrew/opt/cxxtest/include)
#
## Set the path to the cxxtestgen script
#set(CXXTEST_TESTGEN_EXECUTABLE /opt/homebrew/opt/cxxtest/bin/cxxtestgen)
#
## Find CxxTest package
#find_package(CxxTest REQUIRED)
#
## Enable testing
#enable_testing()
#
## Create the test target using the generated runner.cpp
#CXXTEST_ADD_TEST(unittest                      # Name of the test target
#    runner.cpp    # Generated by cxxtestgen
#    ${CMAKE_CURRENT_SOURCE_DIR}/unitTest/testContact.h  # Test file
#    ${CMAKE_CURRENT_SOURCE_DIR}/include/Person.h
#    ${CMAKE_CURRENT_SOURCE_DIR}/include/Contact.h
#    )
#
#
#target_sources(unittest PRIVATE
#    src/Contact.cpp
#    src/Person.cpp
#)
#
#target_include_directories(unittest PRIVATE
#    ${CMAKE_CURRENT_SOURCE_DIR}/include
#)
#
## Executable
#add_executable(${PROJECT_NAME} #${SOURCES}
#    src/Contact.cpp
#    src/Person.cpp
#    runner.cpp
#)
#
##Code coverage flags
#if(CMAKE_BUILD_TYPE STREQUAL "Debug")
#    set(COVERAGE_FLAGS "-fprofile-instr-generate -fcoverage-mapping")
#    add_compile_options(${COVERAGE_FLAGS})
#    add_link_options(${COVERAGE_FLAGS})
#endif()
#
#
#
